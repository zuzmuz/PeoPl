
withUnsafeRef[T, S, E in Error]: (T) [
    body: (T) -> Result[S, E]
] -> Result[S, E] {
    _
}

Slice::from[T, n: Int]: [
    vector: [T ** n]
] -> Slice[T] {
    _
}

Drawable: subset [
    fff: (Self) -> _,
    eqq: [s: Self, x: Self] -> Self
]

unsafeRef[T]: (T) -> UnsafeRef[T] {
    never
}

unsafeDeref[T]: (UnsafeRef[T]) -> T {
    g(a: b, c: d) |>
    |a| (1+2*(c-2)).x(x: a |> x, d: nothing)
}

Type: [
    sfsd: A
]
