A\sdf\Ssdf: [t Type\sdf] => 'choice [
    x A,
    x B,
]


x: [t Tyo] => 'func (Int) [sd aa, sd as] [s] -> nothing { 
    1 + 2 * 3 + 2 - x(3)()()() * 3().sdf()
    |> sdf + ss - as { sdf } a: { _ }
}

xc: nothing

Result: [S, E Error] => 'choice [
    sucess S,
    error E
]
