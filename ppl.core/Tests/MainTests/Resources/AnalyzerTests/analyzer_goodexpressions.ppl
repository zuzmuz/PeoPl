// factorial: [n' Int] -> Int {
//     n
//     |>
//     |1| 1
//     |$n| n * factorial(n: n-1)
// }

arithmetic: func (Int)[a' Int, b' Int] -> Bool {
    * (a + b)
    |> - 3
    |> > (a - b)

}

functionCall: func [a' Int, b' Int, c' Int] -> Bool {
    a + b
    |> arithmetic(a: b, b: c)
}

Record: [
    a' Int,
    b' Int
]

access: func [r' Record] -> Bool {
    1.arithmetic(a: r.a, b: r.b)
}
